// <auto-generated />
using System;
using Latihan.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Latihan.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Latihan.Models.Account", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIK");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Latihan.Models.Education", b =>
                {
                    b.Property<string>("Education_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<float?>("GPA")
                        .HasColumnType("real");

                    b.Property<string>("University_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Education_Id");

                    b.HasIndex("University_Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Latihan.Models.Employee", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIK");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Latihan.Models.Profiling", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Education_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NIK");

                    b.HasIndex("Education_Id");

                    b.ToTable("Profilings");
                });

            modelBuilder.Entity("Latihan.Models.University", b =>
                {
                    b.Property<string>("Univ_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Univ_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Univ_Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Latihan.Models.Account", b =>
                {
                    b.HasOne("Latihan.Models.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("Latihan.Models.Account", "NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Latihan.Models.Education", b =>
                {
                    b.HasOne("Latihan.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("University_Id");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Latihan.Models.Profiling", b =>
                {
                    b.HasOne("Latihan.Models.Education", "Education")
                        .WithMany()
                        .HasForeignKey("Education_Id");

                    b.HasOne("Latihan.Models.Account", "Account")
                        .WithOne("Profiling")
                        .HasForeignKey("Latihan.Models.Profiling", "NIK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Education");
                });

            modelBuilder.Entity("Latihan.Models.Account", b =>
                {
                    b.Navigation("Profiling");
                });

            modelBuilder.Entity("Latihan.Models.Employee", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
